 int start=0; int end= arr.length-1;

        int ans=-1;
        while(start<=end){
            int mid = start+(end-start)/2;
            
            if(target==arr[mid]){
                ans = mid;
                return ans;
            }
            else if(target<arr[mid]){
               end = mid -1; 
            }
            else if(target>arr[mid]){
                start = mid +1;
            }
        }
        return ans;

PEAK IN MOUNTAIN ARRAY
   while(start < end){
   ...
   if(arr[mid] < arr[mid + 1]){
     start = mid + 1;
   }
   else if(arr[mid] > arr[mid + 1]){
     end = mid;
   }
  
   }
return start;
PIVOT IN ROTATED ARRAY
static int pivot(int[] arr){
        int start = 0;
        int end = arr.length -1;
        
        if(arr[start] < arr[end]){
            return arr[end];
        }
        while(start < end){
            int mid = start + (end - start)/2;
            if(arr[start ] == arr[end]){
                return start;
            }
            else if(arr[start] > arr[mid]){
                end = mid -1;
            }
            else if(arr[mid] < arr[mid + 1]){
                start = mid + 1;
            }
            else{
                return mid;
            }
        }
        return start;
    }
